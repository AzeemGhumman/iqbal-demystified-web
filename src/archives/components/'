////////////////////////////////////////
//	HTML
////////////////////////////////////////
<template>
<div id="MainPage" class="container">

  <!-- <div v-for="splitMessage in splitedList2"> 
	<p>{{splitedList2}}</p> 
  	 </div> 
      	<div v-if=" profileSigninMessage == 'message: Login successfull username: test'"> -->

<!-- <p>profileSigninMessage: {{profileSigninMessage}}</p> -->
 

	<div v-if=" splitedFirstMessage == 'done'"> 

		<div class="circle">{{splitedListUsername}}</div>

	</div>

	<!-- If you are not signed in show rectangle 
	with label sign in. and if clicked go to register page-->
	
	<div v-else>

		<router-link :to="{ path: 'RegisterPage'}"><div class="rectangle">SIGN IN</div></router-link>

	</div>

	<!-- <h1 style="font-family:Courier New;color:blue;font-size:300%;text-align:center;">ALLAMA IQBAL</h1>
	<p style="font-family:courier;">This is a paragraph.</p> -->



<!-- <router-link :to="'ExampleSimplePage'">Go to Example Sample Page</router-link> -->

	<!-- <div>{{profileSigninMessage}}  </div> -->

	<iqbal_title> ALLAMA IQBAL </iqbal_title>

	<TabView1></TabView1> 

	<!-- <router-link :to="{ name: 'TabView1', query: {messageFromSigninPage:'{{profileSigninMessage}}'}}">a</router-link> -->

	<TabView2></TabView2>
</div>
</template>

////////////////////////////////////////
//	SCRIPT
////////////////////////////////////////
<script>

import StaticContentService from '@/services/StaticContentService'
// import TabView1 from '@/components/TabView1'
// import TabView2 from '@/components/TabView2'

require('../assets/css/poem_page.css')

export default {
	name: 'MainPage',
	components: {
	},
  	created () {
    		this.profileSigninMessage = this.$route.query.messageFromSigninPage;
  	},
        data () {
		return {
			// profileSigninMessage: ""
			profileSigninMessage: "hello"
		}
	},

  computed: {
    splitedFirstMessage(){
	try{
        let newArr = this.profileSigninMessage.split(":");
	

	console.log("Inside splitedList2")
	console.log(newArr[0])
	console.log(newArr[1])
	return newArr[0];
	}
	catch(err){
		return "Error";
	}
    },

    splitedListUsername(){
        let newArr = this.profileSigninMessage.split(":");
	// let firstChar = newArr[1].charAt(0);
	console.log(newArr[1].charAt(0).toUpperCase())
	return newArr[1].charAt(0).toUpperCase()
    }

  }
}
</script>

////////////////////////////////////////
//	CSS
////////////////////////////////////////
<style scoped>
    iqbal_title {
	font-family: Times New Roman;
	font-weight: bold;
	color: black;
	font-size:300%;
	text-align:center;
	font-weight: bold;
    }
    h1, h2 {
        font-weight: normal;
    }

    ul {
        list-style-type: none;
        padding: 0;
    }

    li {
        display: inline-block;
        margin: 0 10px;
    }

    a {
        color: #42b983;
    }
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.container {  
    max-width: 620px; 
    min-width: 420px;
    margin: 40px auto;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 0.9em;
    color: #888;
}

/* Style the tabs */
.tabs {
    overflow: hidden;
  margin-left: 20px;
    margin-bottom: -2px;
}

.tabs ul {
    list-style-type: none;
    margin-left: 20px;
}

.tabs a{
    float: left;
    cursor: pointer;
    padding: 12px 24px;
    transition: background-color 0.2s;
    border: 1px solid #ccc;
    border-right: none;
    background-color: #f1f1f1;
    border-radius: 10px 10px 0 0;
    font-weight: bold;
}
.tabs a:last-child { 
    border-right: 1px solid #ccc;
}

/* Change background color of tabs on hover */
.tabs a:hover {
    background-color: #aaa;
    color: #fff;
}

/* Styling for active tab */
.tabs a.active {
    background-color: #fff;
    color: #484848;
    border-bottom: 2px solid #fff;
    cursor: default;
}

/* Style the tab content */
.tabcontent {
    padding: 30px;
    border: 1px solid #ccc;
    border-radius: 10px;
  box-shadow: 3px 3px 6px #e1e1e1
}


.rectangle {
  line-height: 50px;
  width: 100px;
  background-color:   #ADD8E6;
  position:absolute;
  text-align: center;
  font-size: 25px;
  font-weight: bold;
  padding: 10px;
  top:0;
  right:0;
}

.circle {
  // height: 50px;
  line-height: 50px;
  width: 50px;
  background-color: #FF0000;
  border-radius: 50%;
  position:absolute;
  text-align: center;
  font-size: 25px;
  font-weight: bold;
  padding: 10px;
  top:0;
  right:0;
}
</style>
